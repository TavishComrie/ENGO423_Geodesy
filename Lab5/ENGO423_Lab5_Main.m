clc
clear
close all

%Following Code is Autogenerated by MATLAB
%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 5);

% Specify sheet and range
opts.Sheet = "PR-all";
opts.DataRange = "A3:E112";

% Specify column names and types
opts.VariableNames = ["BM", "fidecimalDegree", "lambdadecimaDegree", "NormalHeightH", "gmGal"];
opts.VariableTypes = ["double", "double", "double", "double", "double"];

% Import the data
tbl = readtable("Normal_Heights_Gravity_Line1.xls", opts, "UseExcel", false);

%% Convert to output type
BM = tbl.BM;
fiDD = tbl.fidecimalDegree;
lambdaDD = tbl.lambdadecimaDegree;
NormalHeightH = tbl.NormalHeightH;
gmGal = tbl.gmGal;

%% Clear temporary variables
clear opts tbl
ybar = zeros(size(NormalHeightH,1),1);
ybar45 = zeros(size(NormalHeightH,1),1);

C = zeros(size(NormalHeightH,1),1);

%From here it is our own code
for i = 1:size(NormalHeightH)
    [ybar(i),y(i)] = meanNormalGravity(lambdaDD(i),NormalHeightH(i));
    ybar45(i) = meanNormalGravity(45,NormalHeightH(i));
end


for i = 1:size(NormalHeightH,1)
    C(i,1) = NormalHeightH(i)*ybar(i);
end

H = zeros(size(NormalHeightH,1),1);
Hd = zeros(size(NormalHeightH,1),1);


for i = 1:size(NormalHeightH,1)
    H(i) = OrthoHeight(C(i),gmGal(i),NormalHeightH(i));
    Hd(i) = C(i) / ybar45(i);
end

Hcorr = PlotHeights(NormalHeightH-H,NormalHeightH,"Normal Heights","Helmert and Normal Height Difference");


HdCorr = PlotHeights(H-Hd,H,"Helmert Height","Helmert and Dynamic Height Difference");


EmpRelationship = PlotHeights(Bdiff-(NormalHeightH-H),H,"Orthometric Heights","Bouguer Difference and Helmert Difference Difference");

%% Task 1.2

deltag = g - NormalGravityatH(lambdaDD,NormalHeightH);
deltagBouger = g - NormalGravityatH(lambdaDD,NormalHeightH) - 0.1119.*NormalHeightH;

gravAnomCorr = PlotHeights(deltag,NormalHeightH,"Normal Height","Gravity Anomalies");
gravAnomBougerCorr = PlotHeights(deltagBouger,NormalHeightH,"Normal Height","Bouger Anomalies");



%% Task 1.1 Functions
function [H] = OrthoHeight(C,g,Hstar)

     while true
          gMean = g+(0.0424*Hstar);
          H = C/(gMean*1E-5);

          if abs((Hstar-H)/H)<0.0001
              break
          else
              Hstar = H;
          end
     end
       
end

function [corr] = PlotHeights(Hdiff,H,xaxis,yaxis)
    figure;
    plot(H,Hdiff,".")
    xPhrase = [xaxis '(m)'];
    yPhrase = [yaxis '(m)'];
    titlePhrase = [xaxis ' vs ' yaxis ' at Each Benchmark'];

    title(titlePhrase);
    xlabel(xPhrase);
    ylabel(yPhrase);

    corr = corrcoef(Hdiff,H);
end

%% Task 1.2 Functions
function [Bdiff] = BouguerDiff(gB,H,gBar)
    Bdiff = gB.*H./gBar;
end